/*
* ============================================================================
*  Name     : CBluetoothDeviceSearcher from BluetoothDeviceSearcher.h
*  Part of  : AuebTriliza
*  Created  : 11/12/2004 by Makidis Mixalis & Karakatsiotis Giorgos
*  Implementation notes:
*     Initial content was generated by Series 60 AppWizard.
*  Copyright: Makidis Mixalis & Karakatsiotis Giorgos 2004-2005
* ============================================================================
*/

// Includes
#include "BluetoothDeviceSearcher.h"
#include "BluetoothDefinitions.h"
#include "BluetoothObserver.h"
#include "AuebTrilizaApp.h"

#include <aknnotewrappers.h> // for notes

// Constructor
CBluetoothDeviceSearcher* CBluetoothDeviceSearcher::NewLC(MBluetoothObserver &aBluetoothObserver)
	{
	CBluetoothDeviceSearcher* self = new (ELeave) CBluetoothDeviceSearcher(aBluetoothObserver);
	CleanupStack::PushL(self);
	self->ConstructL();
	return self;
	}

// Constructor
CBluetoothDeviceSearcher* CBluetoothDeviceSearcher::NewL(MBluetoothObserver &aBluetoothObserver)
	{
	CBluetoothDeviceSearcher* self = CBluetoothDeviceSearcher::NewLC(aBluetoothObserver);
	CleanupStack::Pop(self);
	return self;
	}

// Constructor
CBluetoothDeviceSearcher::CBluetoothDeviceSearcher(MBluetoothObserver &aBluetoothObserver)
: CActive(0), iObserver(aBluetoothObserver)
	{
	}

// Destructor
CBluetoothDeviceSearcher::~CBluetoothDeviceSearcher()
	{
	Deque();
	}

// Constructor
void CBluetoothDeviceSearcher::ConstructL()
	{
	CActiveScheduler::Add(this);
	}

// Psaxnei sto piconet gia tis syskeyes poy yparxoyn (o kwdikas filtrarei
// etsi wste na emfanizontai mono oi syskeyes poy parexoyn thn yphresia poy 8eloyme
// alla ayth h idiothta den exei ylopoiithei akoma apo to Symbian OS)
void CBluetoothDeviceSearcher::SelectDeviceL(TBTDeviceResponseParamsPckg& aResponse)
	{
	iResponse = &aResponse;  // store a pointer to the response buffer

	TUUID targetServiceClass(KUidAuebTriliza.iUid);
	TBTDeviceClass deviceClass(KUidAuebTriliza.iUid);

	
	// oi me8odoi toy filtrarismatos den ylopoioyntai akoma apo to OS
	TBTDeviceSelectionParams selectionFilter;
	selectionFilter.SetUUID(targetServiceClass);
	selectionFilter.SetDeviceClass(deviceClass);

	TBTDeviceSelectionParamsPckg selectionParams(selectionFilter);

	User::LeaveIfError(iNotifier.Connect());
	iNotifier.StartNotifierAndGetResponse(iStatus, KDeviceSelectionNotifierUid, selectionParams, aResponse);
	SetActive();
	}


// H RunL tou Active Object
void CBluetoothDeviceSearcher::RunL()
	{

	TInt retVal = iStatus.Int();
	if (retVal == KErrNone)
		{
		if ((*iResponse)().IsValidDeviceName())
			{
			retVal = KErrNone;
			}
		}

	iNotifier.CancelNotifier(KDeviceSelectionNotifierUid);
	iNotifier.Close();

	iObserver.DeviceFoundL(retVal);
	}


// Akyrwsi tis ektelesis tou Active Object
void CBluetoothDeviceSearcher::DoCancel()
	{
	iNotifier.CancelNotifier(KDeviceSelectionNotifierUid);
	iNotifier.Close();
	}

// End of File
